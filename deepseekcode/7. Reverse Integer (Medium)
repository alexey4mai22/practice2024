class Solution:
    def reverse(self, x: int) -> int:
        # Define the limits for a signed 32-bit integer
        INT_MAX = 2**31 - 1
        INT_MIN = -2**31

        # Initialize the result
        result = 0

        # Check if the number is negative
        is_negative = x < 0

        # Work with the absolute value of x
        x = abs(x)

        while x != 0:
            # Pop the last digit from x
            pop = x % 10
            x //= 10

            # Check if adding the next digit will cause overflow
            if result > INT_MAX // 10 or (result == INT_MAX // 10 and pop > 7):
                return 0
            if result < INT_MIN // 10 or (result == INT_MIN // 10 and pop < -8):
                return 0

            # Push the digit to the result
            result = result * 10 + pop

        # Return the result with the original sign
        return -result if is_negative else result
