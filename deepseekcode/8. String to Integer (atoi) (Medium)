class Solution:
    def myAtoi(self, s: str) -> int:
        INT_MAX = 2**31 - 1
        INT_MIN = -2**31

        # Step 1: Ignore leading whitespace
        s = s.lstrip()

        # Step 2: Check for sign
        if not s:
            return 0

        sign = 1
        start = 0

        if s[0] == '-':
            sign = -1
            start = 1
        elif s[0] == '+':
            start = 1

        # Step 3: Read digits and convert to integer
        result = 0
        for i in range(start, len(s)):
            if not s[i].isdigit():
                break
            result = result * 10 + int(s[i])

            # Step 4: Check for overflow
            if result > INT_MAX:
                return INT_MAX if sign == 1 else INT_MIN

        # Apply sign
        result *= sign

        # Step 4: Check for overflow again after applying sign
        if result < INT_MIN:
            return INT_MIN
        if result > INT_MAX:
            return INT_MAX

        return result
