def longestPalindrome(self, s: str) -> str:
    n = len(s)
    dp = [[False] * n for _ in range(n)]
    max_length = 0
    start = 0

    for length in range(1, n + 1):
        for i in range(n - length + 1):
            j = i + length - 1
            if s[i] == s[j] and (length < 3 or dp[i + 1][j - 1]):
                dp[i][j] = True
                if length > max_length:
                    max_length = length
                    start = i

    return s[start:start + max_length]
